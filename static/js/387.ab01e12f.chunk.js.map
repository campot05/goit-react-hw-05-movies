{"version":3,"file":"static/js/387.ab01e12f.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAAH,4kB,SCuCjB,EArCa,WACX,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAAII,MAAK,SAAAC,GACnBN,EAAQM,EAAIP,KAAKQ,MAAM,EAAG,IAC3B,GACF,GAAE,CAACN,KAGF,8BACGF,IACC,SAACH,EAAD,UACGG,EAAKS,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACrC,OACE,2BACE,gBACEC,IACED,EAAY,UAhBf,oCAgBe,OACIA,GADJ,+DAIdE,IAAI,UAEN,uBAAIJ,KACJ,uCAAeC,OAVRF,EAaZ,OAKV,C,+LCrCKM,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF7D,cAEGG,EAFH,yBAIIA,EAASC,MAJb,gCAMHC,QAAQC,IAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BrB,GAA5B,gGAEoBgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,oBACGc,EADH,oBAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BH,GAA3B,gGAEoBgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,4BAA0Cc,IAF9D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0BtB,GAA1B,gGAEoBgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,4BACWc,EADX,2BAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBR,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACqBU,IAHzC,cAEGP,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/utils/API.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  flex-wrap: wrap;\n  margin: 20px auto 0px auto;\n  padding: 0;\n  justify-contect: center;\n  li {\n    width: 175px;\n    margin-right: 20px;\n    margin-bottom: 20px;\n    background-color: #fff;\n    text-align: center;\n    box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n      0px 2px 1px rgb(0 0 0 / 20%);\n    border-radius: 0px 0px 4px 4px;\n  }\n\n  img {\n    width: 100%;\n    display: block;\n    height: 260px;\n  }\n  p {\n    font-size: 18px;\n  }\n  b {\n    font-size: 22px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getCastList } from 'components/utils';\nimport { List } from './Cast.styled';\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n\n  const { id } = useParams();\n  const imgUrl = 'https://image.tmdb.org/t/p/w500/';\n  useEffect(() => {\n    getCastList(id).then(res => {\n      setCast(res.cast.slice(0, 10));\n    });\n  }, [id]);\n\n  return (\n    <>\n      {cast && (\n        <List>\n          {cast.map(({ cast_id, name, character, profile_path }) => {\n            return (\n              <li key={cast_id}>\n                <img\n                  src={\n                    profile_path\n                      ? `${imgUrl}${profile_path}`\n                      : `https://m.media-amazon.com/images/S/sash/9FayPGLPcrscMjU.png`\n                  }\n                  alt=\"text\"\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'be93eef600e8fe429646a6ef82601194';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopular() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieData(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCastList(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getByQuery(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["List","styled","useState","cast","setCast","id","useParams","useEffect","getCastList","then","res","slice","map","cast_id","name","character","profile_path","src","alt","API_KEY","fetchPopular","axios","response","data","console","log","getMovieData","getReviews","getByQuery","query"],"sourceRoot":""}