{"version":3,"file":"static/js/158.f51cabf0.chunk.js","mappings":"+SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF7D,cAEGG,EAFH,yBAIIA,EAASC,MAJb,gCAMHC,QAAQC,IAAR,MANG,gFAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEoBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,oBACGR,EADH,oBAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,gGAEoBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4BAA0CR,IAF9D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,gGAEoBN,EAAAA,EAAAA,IAAA,iBACXM,EADW,4BACWR,EADX,2BAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBV,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACqBY,IAHzC,cAEGT,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,8B,oKCDZW,EAAOC,EAAAA,GAAAA,GAAH,6CAIJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qE,SCqDtB,EAvDe,WACb,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SACrC,GAA0BN,EAAAA,EAAAA,WAAS,kBAAMK,GAAe,EAArB,IAAnC,eAAOV,EAAP,KAAcY,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,uGACYf,EAAAA,EAAAA,IAAWW,GADvB,gBACNK,EADM,EACNA,QACRT,EAAQS,GAFM,2CAAH,qDAITL,GACFI,GAEH,GAAE,CAACJ,IAEJ,IAAMM,GAAWC,EAAAA,EAAAA,MAMXC,EAAY,mCAAG,WAAMC,GAAN,iEACnBA,EAAEC,iBACFX,EAAgB,CAAET,MAAOA,IAFN,2CAAH,sDAKlB,OACE,6BACE,kBAAMqB,SAAUH,EAAhB,WACE,kBAAOI,KAAK,OAAOC,MAAOvB,EAAOwB,SAZlB,SAAAL,GACnBP,EAASO,EAAEM,OAAOF,MACnB,KAWK,mBAAQD,KAAK,SAAb,wBAEF,yBACG9B,IACEA,EAAKkC,OAAS,GACb,SAACzB,EAAD,UACGT,EAAKmC,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOhC,EAAS,EAATA,GAClB,OACE,yBACE,SAACO,EAAD,CAAW0B,MAAO,CAAEC,KAAMd,GAAYe,GAAE,kBAAanC,GAArD,SACGgC,KAFIhC,EAMZ,OAGH,uEAKX,C","sources":["components/utils/API.jsx","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'be93eef600e8fe429646a6ef82601194';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopular() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieData(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCastList(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getByQuery(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const LinkFilms = styled(Link)`\n  text-decoration: none;\n  color: #3a81b0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getByQuery } from 'components/utils';\nimport { List, LinkFilms } from './Movies.styled';\nconst Movies = () => {\n  const [data, setData] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [query, setQuery] = useState(() => searchQuery || '');\n\n  useEffect(() => {\n    const getData = async () => {\n      const { results } = await getByQuery(searchQuery);\n      setData(results);\n    };\n    if (searchQuery) {\n      getData();\n    }\n  }, [searchQuery]);\n\n  const location = useLocation();\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        {data &&\n          (data.length > 0 ? (\n            <List>\n              {data.map(({ title, id }) => {\n                return (\n                  <li key={id}>\n                    <LinkFilms state={{ from: location }} to={`/movies/${id}`}>\n                      {title}\n                    </LinkFilms>\n                  </li>\n                );\n              })}\n            </List>\n          ) : (\n            <p>No movies with this title ðŸ˜¢</p>\n          ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchPopular","axios","response","data","console","log","getMovieData","id","getCastList","getReviews","getByQuery","query","List","styled","LinkFilms","Link","useState","setData","useSearchParams","searchParams","setSearchParams","searchQuery","get","setQuery","useEffect","getData","results","location","useLocation","handleSubmit","e","preventDefault","onSubmit","type","value","onChange","target","length","map","title","state","from","to"],"sourceRoot":""}