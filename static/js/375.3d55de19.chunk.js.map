{"version":3,"file":"static/js/375.3d55de19.chunk.js","mappings":"iQAGaA,GAASC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uFAMNE,EAAYF,EAAAA,GAAAA,IAAH,oXAwBTG,EAASH,EAAAA,GAAAA,IAAH,wGAONI,EAAaJ,EAAAA,GAAAA,IAAH,0FAOVK,EAAUL,EAAAA,GAAAA,GAAH,iNAaPM,GAAiBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,mO,SCS3B,EAzDqB,WAAO,IAAD,IACzB,GAA0BQ,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAGRE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAAII,MAAK,SAAAC,GACpBN,EAASM,EACV,GACF,GAAE,CAACL,IAEJ,IAEMM,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,6BACE,SAACrB,EAAD,CAAQsB,GAAIJ,EAAZ,6BACCR,IACC,iCACE,UAACP,EAAD,YACE,gBAAKoB,IAAG,UAlBH,oCAkBG,OAAcb,EAAMc,aAAeC,IAAKf,EAAMgB,SACtD,4BACE,wBAAKhB,EAAMgB,SACX,wCAAgBC,KAAKC,MAA2B,GAArBlB,EAAMmB,cAAjC,QACA,sCACA,uBAAInB,EAAMoB,YACV,mCACCpB,IACC,SAACN,EAAD,UACGM,EAAMqB,OAAOC,KAAI,SAAAC,GAChB,OAAO,0BAAoBA,EAAIC,MAAbD,EAAIrB,GACvB,aAKT,mBACA,UAACP,EAAD,YACE,oDACA,UAACC,EAAD,YACE,yBACE,SAACC,EAAD,CAAgBe,GAAG,OAAnB,qBAEF,yBACE,SAACf,EAAD,CAAgBe,GAAG,UAAnB,2BAIJ,SAAC,KAAD,YAMX,C,+LCjEKa,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,EAAAA,IAAA,sCAAyCF,IAF7D,cAEGG,EAFH,yBAIIA,EAASC,MAJb,gCAMHC,QAAQC,IAAR,MANG,gFAUA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,gGAEoByB,EAAAA,EAAAA,IAAA,iBACXzB,EADW,oBACGuB,EADH,oBAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2B9B,GAA3B,gGAEoByB,EAAAA,EAAAA,IAAA,iBAAoBzB,EAApB,4BAA0CuB,IAF9D,cAEGG,EAFH,yBAGIA,EAASC,MAHb,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0B/B,GAA1B,gGAEoByB,EAAAA,EAAAA,IAAA,iBACXzB,EADW,4BACWuB,EADX,2BAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,gGAEoBR,EAAAA,EAAAA,IAAA,gCACIF,EADJ,kBACqBU,IAHzC,cAEGP,EAFH,yBAKIA,EAASC,MALb,gCAOHC,QAAQC,IAAR,MAPG,gFA3CPJ,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/utils/API.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const GoBack = styled(Link)`\n  text-decoration: none;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  img {\n    width: 275px;\n    height: 400px;\n    margin-right: 20px;\n  }\n  div {\n    h2 {\n      margin: 0px 0px 20px 0px;\n      font-size: 36px;\n    }\n    h3 {\n      font-size: 28px;\n      margin: 0px 0px 15px 0px;\n      font-weight: 700;\n    }\n  }\n  p {\n    margin: 0px 0px 15px 0px;\n    font-size: 18px;\n  }\n`;\n\nexport const Genres = styled.div`\n  display: flex;\n  span {\n    margin-right: 15px;\n    font-size: 18px;\n  }\n`;\nexport const Additional = styled.div`\n  h3 {\n    margin: 0px 0px 20px 0px;\n    font-size: 24px;\n  }\n`;\n\nexport const ListBtn = styled.ul`\n  display: flex;\n  margin: 0;\n  padding: 0;\n  align-items: center;\n  li {\n    margin-right: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const AdditionalLink = styled(NavLink)`\n  color: black;\n  padding: 4px 8px;\n  text-decoration: none;\n  font-size: 22px;\n  border-radius: 5px;\n  border: 1px solid black;\n  &.active {\n    color: white;\n    background-color: black;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieData } from 'components/utils';\nimport {\n  Container,\n  GoBack,\n  Genres,\n  Additional,\n  AdditionalLink,\n  ListBtn,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const imgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getMovieData(id).then(res => {\n      setMovie(res);\n    });\n  }, [id]);\n\n  const location = useLocation();\n\n  const lastPage = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <GoBack to={lastPage}> &#8592; Go back</GoBack>\n      {movie && (\n        <>\n          <Container>\n            <img src={`${imgUrl}${movie.poster_path}`} alt={movie.title}></img>\n            <div>\n              <h2>{movie.title}</h2>\n              <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              {movie && (\n                <Genres>\n                  {movie.genres.map(gen => {\n                    return <span key={gen.id}>{gen.name}</span>;\n                  })}\n                </Genres>\n              )}\n            </div>\n          </Container>\n          <hr />\n          <Additional>\n            <h3>Additional information</h3>\n            <ListBtn>\n              <li>\n                <AdditionalLink to=\"cast\">Cast</AdditionalLink>\n              </li>\n              <li>\n                <AdditionalLink to=\"reviews\">Reviews</AdditionalLink>\n              </li>\n            </ListBtn>\n\n            <Outlet />\n          </Additional>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'be93eef600e8fe429646a6ef82601194';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchPopular() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieData(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getCastList(id) {\n  try {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getReviews(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getByQuery(query) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["GoBack","styled","Link","Container","Genres","Additional","ListBtn","AdditionalLink","NavLink","useState","movie","setMovie","id","useParams","useEffect","getMovieData","then","res","lastPage","useLocation","state","from","to","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","gen","name","API_KEY","fetchPopular","axios","response","data","console","log","getCastList","getReviews","getByQuery","query"],"sourceRoot":""}